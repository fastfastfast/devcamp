[{"C:\\Users\\sangh\\Documents\\devcamp\\src\\page\\Play.js":"1","C:\\Users\\sangh\\Documents\\devcamp\\src\\page\\Community.js":"2"},{"size":10575,"mtime":1606942040713,"results":"3","hashOfConfig":"4"},{"size":8295,"mtime":1606916672817,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1q3ay53",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\sangh\\Documents\\devcamp\\src\\page\\Play.js",["11","12","13","14","15","16","17","18","19"],"C:\\Users\\sangh\\Documents\\devcamp\\src\\page\\Community.js",["20"],"import NavBar from '../components/NavBar';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport { Card, ListGroup, Tab, Row, Col,Form,Button } from 'react-bootstrap';\r\nimport { firebase } from '../services/firebase'\r\nimport { useEffect, useState } from 'react'\r\nimport '../Styles/Community.css';\r\n\r\nfunction Community() {\r\n    const [postInfo, setPostInfo] = useState()\r\n\r\n    const renderCard = (card, index) => {\r\n        return (\r\n            <Card style={{ width: '50rem' }} className=\"post-card\">\r\n                <Card.Body>\r\n                    <Card.Title>{card.infoPost.name}</Card.Title>\r\n                    <Card.Text>{card.infoPost.post}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    const onSubmit = (gameName, e) => {\r\n        e.preventDefault()\r\n        console.log(e.target.textField.value);\r\n        firebase.database().ref(`/game/${gameName}`).push({infoPost: {name : \"pang\", post : e.target.textField.value}})\r\n    }\r\n\r\n    useEffect(() => {\r\n        {/* hook database from firebase */ }\r\n        const fetchData = async () => {\r\n            const snaphot = await firebase.database().ref('/game').once('value')\r\n            const data = snaphot.val()\r\n            // console.log(data)\r\n            setPostInfo(data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className=\"community\">\r\n                <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#dota2\">\r\n                    <Row>\r\n                        <Col sm={2}>\r\n                            <ListGroup>\r\n                                <ListGroup.Item action href=\"#dota2\">\r\n                                    <Figure.Image\r\n                                        src=\"https://steamcdn-a.akamaihd.net/steam/apps/570/header.jpg?t=1605831017\"\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item action href=\"#csgo\">\r\n                                    <Figure.Image\r\n                                        src=\"https://steamcdn-a.akamaihd.net/steam/apps/730/header.jpg?t=1605757059\"\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item action href=\"#amongus\">\r\n                                    <Figure.Image\r\n                                        src=\"https://steamcdn-a.akamaihd.net/steam/apps/945360/header.jpg?t=1606422465\"\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item action href=\"#genshin\">\r\n                                    <Figure.Image\r\n                                        src=\"https://www.appdisqus.com/wp-content/uploads/2020/09/00-5-1.jpg\"\r\n                                    />\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col sm={9}>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"#dota2\">\r\n                                    <Form onSubmit={(e) => onSubmit(\"dota2\", e)}>\r\n                                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                            <Form.Label style={{ marginTop: \"20px\" }}>Post</Form.Label>\r\n                                            <Form.Control name=\"textField\" as=\"textarea\" rows={3} />\r\n                                        </Form.Group>\r\n                                        <Button as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                                    </Form>\r\n                                    {postInfo &&\r\n                                        <div> {/* if postInfo have item  */}\r\n                                            {\r\n                                                Object.keys(postInfo.dota2).reverse().map(item => renderCard(postInfo.dota2[item]))\r\n                                                /* loop if user.game have dota2 include in postInfo call renderCard -> postInfo  */\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"#csgo\">\r\n                                    <Form onSubmit={(e) => onSubmit(\"csgo\", e)}>\r\n                                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                            <Form.Label style={{ marginTop: \"20px\" }}>Post</Form.Label>\r\n                                            <Form.Control name=\"textField\" as=\"textarea\" rows={3} />\r\n                                        </Form.Group>\r\n                                        <Button as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                                    </Form>\r\n                                    {postInfo &&\r\n                                        <div> {/* if postInfo have item  */}\r\n                                            {\r\n                                                Object.keys(postInfo.csgo).reverse().map(item => renderCard(postInfo.csgo[item]))\r\n                                                // csgoItems.map(renderCard)\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"#amongus\">\r\n                                    <Form onSubmit={(e) => onSubmit(\"amongus\", e)}>\r\n                                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                            <Form.Label style={{ marginTop: \"20px\" }}>Post</Form.Label>\r\n                                            <Form.Control name=\"textField\" as=\"textarea\" rows={3} />\r\n                                        </Form.Group>\r\n                                        <Button as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                                    </Form>\r\n                                    {postInfo &&\r\n                                        <div> {/* if postInfo have item  */}\r\n                                            {\r\n                                                Object.keys(postInfo.amongus).reverse().map(item => renderCard(postInfo.amongus[item]))\r\n                                                /* loop if user.game have amongus include in postInfo call renderCard -> postInfo  */\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"#genshin\">\r\n                                    <Form onSubmit={(e) => onSubmit(\"genshin\", e)}>\r\n                                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                            <Form.Label style={{ marginTop: \"20px\" }}>Post</Form.Label>\r\n                                            <Form.Control name=\"textField\" as=\"textarea\" rows={3} />\r\n                                        </Form.Group>\r\n                                        <Button as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                                    </Form>\r\n                                    {postInfo &&\r\n                                        <div> {/* if postInfo have item  */}\r\n                                            {\r\n                                                Object.keys(postInfo.genshin).reverse().map(item => renderCard(postInfo.genshin[item]))\r\n                                                /* loop if user.game have genshin include in postInfo call renderCard -> postInfo  */\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                </Tab.Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Community",{"ruleId":"21","severity":1,"message":"22","line":1,"column":42,"nodeType":"23","messageId":"24","endLine":1,"endColumn":47},{"ruleId":"21","severity":1,"message":"25","line":1,"column":57,"nodeType":"23","messageId":"24","endLine":1,"endColumn":65},{"ruleId":"26","severity":1,"message":"27","line":29,"column":9,"nodeType":"28","messageId":"29","endLine":29,"endColumn":54},{"ruleId":"30","severity":1,"message":"31","line":39,"column":48,"nodeType":"32","endLine":39,"endColumn":86},{"ruleId":"26","severity":1,"message":"27","line":87,"column":9,"nodeType":"28","messageId":"29","endLine":87,"endColumn":45},{"ruleId":"33","severity":1,"message":"34","line":131,"column":41,"nodeType":"35","endLine":131,"endColumn":113},{"ruleId":"33","severity":1,"message":"34","line":145,"column":41,"nodeType":"35","endLine":145,"endColumn":112},{"ruleId":"33","severity":1,"message":"34","line":161,"column":41,"nodeType":"35","endLine":161,"endColumn":115},{"ruleId":"33","severity":1,"message":"34","line":175,"column":41,"nodeType":"35","endLine":175,"endColumn":115},{"ruleId":"26","severity":1,"message":"27","line":29,"column":9,"nodeType":"28","messageId":"29","endLine":29,"endColumn":45},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'CardDeck' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]